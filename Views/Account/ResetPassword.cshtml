@using ConnectCMS.Extensions
@using ConnectCMS.Resources
@using MonsciergeWebUtilities.Extensions
@using MonsciergeWebUtilities.Utilities
@model ConnectCMS.Models.Account.ResetPasswordModel
@{
	Layout = null;
}
<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">

	<meta name="description" content="">
	<meta name="keywords" content="">

	<title>@ConnectCMSResources.MonsciergeConnectCMS</title>
	@Styles.Render( "~/Content/login/css" )
	@Scripts.Render( "~/bundles/modernizr" )
</head>
<body>
	@Html.Partial( "_LoginToolbar" )
	<div id="viewport" class="container">
		<div class="row">
			<div class="col-sm-offset-3 col-sm-6 col-lg-4 col-lg-offset-4">
				<div class="account-wall">
					<img class="img-responsive center-block" src="~/Content/monscierge/images/MonsciergeLogo.png" width="200" alt="@ConnectCMSResources.MonsciergeConnectCMS">
					@using( Html.BeginForm( "ResetPassword", "Account", new RouteValueDictionary { { "ReturnUrl", Model.ReturnUrl } }, FormMethod.Post, new Dictionary<string, object> { { "class", "form-signin" }, { "id", "resetPassword_container" } } ) )
					{
						@Html.AntiForgeryToken()
						@Html.HiddenFor( model => model.ResetGuid )
						@Html.HiddenFor( model => model.ReturnUrl )

						if( Model.ShowResetTitle )
						{
							<p class="muted-text">@Model.ResetTitle</p>
						}
						<p class="muted-text">
							@Model.ResetInstructions
						</p>

						<input name="password1" id="password1" type="password" class="form-control top-input" placeholder="@ConnectCMSResources.NewPassword" required autofocus />
						<input name="password2" id="password2" type="password" class="form-control bottom-input" placeholder="@ConnectCMSResources.ConfirmPassword" required />

						<button type="submit" class="btn btn-primary btn-lg btn-block btn-custom">
							@Model.ResetButtonText
						</button>

						<span class="clearfix"></span>
						<a href="#" id="passwordHelp" class="pull-left need-help">@ConnectCMSResources.PasswordHelp</a>
						<span class="clearfix"></span>
					}
				</div>
			</div>
		</div>
	</div>

	@Html.Partial( "_LoginModals" )

	@Scripts.Render( "~/bundles/login-resetpass" )

	<script type="text/javascript">
		var ConnectCMS = {};
		ConnectCMS.Globalization = @Html.Raw( ResourceUtils.RenderResourceString( ConnectCMSClientResources.ResourceManager ) );

		$(function () {
			var passwordValidation = new PasswordValidationViewModel('#password1');

			$('#password1').on('blur', function () {
				$('#passwordHelp').popover('hide');
				if ($('#password2').val() != '') {
					$('#password2').validate();
				}
			});

			$("#password1").on('input', function () {
				if (!passwordValidation.Visible()) {
					passwordValidation.Visible(true);
					$('#passwordHelp').popover('show');
				}
			});

			$('#passwordHelp').on('shown.bs.popover', function () {
				passwordValidation.Visible(true);
				ko.applyBindings(passwordValidation, $('#passwordHelp + .popover').find('.passwordHelp')[0]);
			});

			$('#passwordHelp').on('hidden.bs.popover', function () {
				passwordValidation.Visible(false);
			});

			$('#passwordHelp').popover({
				html: true,
				content:
					"<div class='passwordHelp'>" +
						"<div class='passwordHelp-item'>" +
						"<div class='icon' data-bind='css: (PasswordReqs != null && PasswordReqs().length > 0 && PasswordReqs()[0].IsValid()) ? \"valid\" : \"\"'></div>" +
						"<span class='passwordHelp-text' data-bind='text: (PasswordReqs != null && PasswordReqs().length > 0) ? PasswordReqs()[0].Text : \"\", css: (PasswordReqs != null && PasswordReqs().length > 0 && PasswordReqs()[0].IsValid()) ? \"valid\" : \"\"'></span>" +
						"</div>" +
						"<div class='passwordHelp-item'>" +
						"<div class='icon' data-bind='css: (PasswordReqs != null && PasswordReqs().length > 1 && PasswordReqs()[1].IsValid()) ? \"valid\" : \"\"'></div>" +
						"<span class='passwordHelp-text' data-bind='text: (PasswordReqs != null && PasswordReqs().length > 1) ? PasswordReqs()[1].Text : \"\", css: (PasswordReqs != null && PasswordReqs().length > 1 && PasswordReqs()[1].IsValid()) ? \"valid\" : \"\"'></span>" +
						"</div>" +
						"<div class='passwordHelp-item'>" +
						"<div class='icon' data-bind='css: (PasswordReqs != null && PasswordReqs().length > 2 && PasswordReqs()[2].IsValid()) ? \"valid\" : \"\"'></div>" +
						"<span class='passwordHelp-text' data-bind='text: (PasswordReqs != null && PasswordReqs().length > 2) ? PasswordReqs()[2].Text : \"\", css: (PasswordReqs != null && PasswordReqs().length > 2 && PasswordReqs()[2].IsValid()) ? \"valid\" : \"\"'></span>" +
						"</div>" +
						"<div class='passwordHelp-item'>" +
						"<div class='icon' data-bind='css: (PasswordReqs != null && PasswordReqs().length > 3 && PasswordReqs()[3].IsValid()) ? \"valid\" : \"\"'></div>" +
						"<span class='passwordHelp-text' data-bind='text: (PasswordReqs != null && PasswordReqs().length > 3) ? PasswordReqs()[3].Text : \"\", css: (PasswordReqs != null && PasswordReqs().length > 3 && PasswordReqs()[3].IsValid()) ? \"valid\" : \"\"'></span>" +
						"</div>" +
						"</div>",
				placement: 'bottom',
				title: ConnectCMS.Globalization.PasswordHelpTitle,
			});

			$('a.lang-option').each(function () {
				$(this).on('click', function () {
					var culture = $(this).data('culture');

					$.ajax({
						type: 'POST',
						url: '/ConnectCMS/Utility/SetCultureWithString',
						data: JSON.stringify({ culture: culture }),
						dataType: 'json',
						contentType: 'application/json',
						success: function (data) {
							window.location = '@Url.Action( "ResetPassword", "Account", Request.QueryString.ToRouteValues() )';
						}
					});

				});
			});
		});
	</script>
</body>
</html>